# Exposes a URL that specifies the behaviour of this scalar.
directive @specifiedBy(
    # The URL that specifies the behaviour of this scalar.
    url: String!
) on SCALAR
# Scalar for BigInteger
scalar BigInteger

# Mutation root
type Mutation {
    ### Service Schema Mutation


    ### Authen Schema Mutation
    # Login
    login(phoneNumber: String, password: String): LoginResponse
    # Update Profile
    updateProfile(request: UpdateUserRequestInput): UserLogin
    # Verify OTP
    verifyOtp(phoneNumber: String, otp: String): LoginResponse
    # Login OAuth
    loginOAuth(provider: String, token: String): LoginResponse
    # Register with OTP
    registerOtp(phoneNumber: String): OtpResponse
    # Update Password
    updatePassword(oldPassword: String, newPassword: String): UserLogin
}

type OtpResponse {
    message: String
    status: Boolean!
}

# Query root
type Query {
    ### Service Schema Query
    # Get feature list
    featureFlagListFeature(request: FeatureRequestInput): [FeatureResponse]
    # Clear features cache
    featureFlagClearFeatureCache: CommonResponse
    # Get bank list for payment
    paymentGetBankList(request: BankRequestInput): [BankResponse]
    # Get notification detail by ID
    appNotification(id: String): AppNotificationListResponse
    # Get list notification by user ID
    appNotificationList(userId: BigInteger): [AppNotificationListResponse]
    # Clear versions cache
    featureFlagClearVersionCache: CommonResponse
    # Get version app of user
    featureFlagGetUserVersion(
        request: UserVersionRequestInput
    ): UserVersionResponse
    # Get payment type list for payment
    paymentGetPaymentTypeList: [PaymentTypeResponse]

    ### Service Schema Query
    # Refresh Token
    refreshToken: TokenResponse
}

### Service Schema
type AppNotificationListResponse {
    htmlContent: String
    icon: String
    id: String
    isRead: Boolean
    time: String
    type: Int
}

input BankRequestInput {
    paymentType: String
}

type BankResponse {
    code: String
    id: Int
    title: String
}

type CommonResponse {
    code: Int
    message: String
}

input FeatureRequestInput {
    os: String
    platform: String
}

type FeatureResponse {
    code: String
    status: Int
}

type PaymentTypeResponse {
    id: Int
    title: String
    type: String
}

input UserVersionRequestInput {
    os: String
    platform: String
}

type UserVersionResponse {
    versionCode: String
    versionName: String
}



### Authen Schema
type LoginResponse {
    token: String
    user: UserLogin
    registed: Boolean!
}

type TokenResponse {
    token: String
}

input UpdateUserRequestInput {
    email: String
    fullName: String
    privateId: String
}

type UserLogin {
    oauthId: String
    oauthProvider: String
    qrcodeSecret: String
    createdDate: String
    email: String
    fullName: String
    id: BigInteger
    password: String
    phoneNumber: String
    privateId: String
    status: Int!
    updatedDate: String
    username: String
}

